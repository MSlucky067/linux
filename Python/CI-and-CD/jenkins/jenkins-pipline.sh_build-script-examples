node {
   stage('Preparation') { // for display purposes
      // Get some code from a GitHub repository
      git credentialsId: '8f6c3db2-48a8-4651-bb46-d8249664169a', url: 'https://git.oschina.net/yonchin/jks-docker.git'
           
   }
   stage('Build') {
     dir('mvp') {
         sh '''
            COMPOSE_ARGS=" -f docker-compose.yml -p jenkins"
            
            sudo docker-compose $COMPOSE_ARGS stop 
            sudo docker-compose $COMPOSE_ARGS rm -fv
        
            sudo docker-compose $COMPOSE_ARGS build
            sudo docker-compose $COMPOSE_ARGS up -d
        
            sleep 5
        
            CODE=$(sudo docker exec jenkins_portal_1 curl -sL -w %{http_code} 127.0.0.1:8080 -o /dev/null) || true
        
            if [ $CODE -eq 200 ]; then
                IMG=$(grep image docker-compose.yml | cut -d: -f2-3 | xargs)
                for img in $IMG; do
                    sudo docker tag $img domain.com:5000/${img##*/}
                    sudo docker push domain.com:5000/${img##*/}
                done
                
                echo "Site returned " $CODE
            fi
         '''
     }
   }
   stage('Deploy') {
       //ansiblePlaybook colorized: true, credentialsId: '913722c9-c49b-441e-af10-039a748927ee', forks: 8, installation: 'ansible  1.7.2', inventory: 'deploy-ansible/inventory', playbook: 'deploy-ansible/deploy.yml', sudo: true, sudoUser: 'crluser'
       sh '''
            ansible-playbook -i deploy-ansible/inventory deploy-ansible/deploy.yml
        '''
   }
}
